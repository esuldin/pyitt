name: Publish Python Package

on:
  release:
    types: [published]

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: recursive

      - name: Install dependencies for Python 3.8
        if: matrix.python-version == '3.8'
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-3.8.locked

      # Temporary workaround until lxml package for PyPy3.11 is provided.
      - name: Install dependencies for PyPy3.11
        if: matrix.python-version == 'pypy3.11'
        run: |
          sudo apt-get install libxml2-dev libxslt1-dev

      - name: Install dependencies for Python
        if: matrix.python-version != '3.8'
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Create source distribution
        run: python -m build --sdist

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: pyitt-cibw-sdist
          path: dist/*.tar.gz
          retention-days: 1

  build_wheels:
    name: Build wheels on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    permissions:
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: recursive

      - name: Build wheels
        uses: ./.github/actions/python-packages

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: pyitt-cibw-wheels-${{matrix.os}}-${{strategy.job-index}}
          path: ./wheelhouse/*.whl
          retention-days: 1

  upload_pypi:
    name: Publish to PyPI
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyitt
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          pattern: pyitt-cibw-*
          path: ./dist
          merge-multiple: true
      
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4

  upload_release_artifacts:
    name: Upload artifacts to GitHub Release
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{github.ref}}

      - name: Download all the dists
        id: download-artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          pattern: pyitt-cibw-*
          path: dist
          merge-multiple: true

      - name: Upload artifacts
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          for filename in "${{steps.download-artifact.outputs.download-path}}"/*; do
            gh release upload "${{github.ref_name}}" "$filename"
          done

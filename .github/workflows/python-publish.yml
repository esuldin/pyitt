name: Publish Python Package

on:
  release:
    types: [published]

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive

      - name: Install dependencies for Python 3.8
        if: ${{matrix.python-version}} == '3.8'
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-3.8.txt

      - name: Install dependencies for Python
        if: ${{matrix.python-version}} != '3.8'
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Create source distribution
        run: python -m build --sdist

      - uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: pyitt-cibw-sdist
          path: dist/*.tar.gz
          retention-days: 1

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive

      - name: Build wheels
        uses: pypa/cibuildwheel@ee63bf16da6cddfb925f542f2c7b59ad50e93969 # v2.22.0
        env:
          CIBW_BUILD: "*-win32 *-win_amd64 *-manylinux_i686 *-manylinux_x86_64 *-musllinux_i686 *-musllinux_x86_64"
          CIBW_SKIP: cp36-* cp37-* pp37-* pp38-*
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          CIBW_MANYLINUX_PYPY_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_PYPY_I686_IMAGE: manylinux2014
          CIBW_MUSLLINUX_X86_64_IMAGE: musllinux_1_2
          CIBW_MUSLLINUX_I686_IMAGE: musllinux_1_2

      - uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: pyitt-cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
          retention-days: 1

  upload_pypi:
    name: Publish to PyPI
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyitt
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: pyitt-cibw-*
          path: ./dist
          merge-multiple: true
      
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@67339c736fd9354cd4f8cb0b744f2b82a74b5c70 # v1.12.3

  upload_release_artifacts:
    name: Upload artifacts to GitHub Release
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.ref }}

      - name: Download all the dists
        id: download-artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: pyitt-cibw-*
          path: dist
          merge-multiple: true

      - name: Upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for filename in "${{steps.download-artifact.outputs.download-path}}"/*; do
            gh release upload "${{ github.ref_name }}" "$filename"
          done
